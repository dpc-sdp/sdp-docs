{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Single Digital Presence \u00b6 Overview \u00b6 SDP project covers implementing a Drupal distribution to build a Content Store site containing site sections and providing content for semi-independent sites. It also covers providing of technical implementation to build fully independent sites. Info Example of Content Store site is https://vic.gov.au , which has site-sections such as Aboriginal Victoria or Family Violence. Semi-independent sites are the other sites that have their content centrally managed. An example of such site is the Office of the Victorian Government Architect site. Fully independent sites are completely separate installations of the whole distribution. Project goals \u00b6 Making it easier to find, understand and use Victorian Government information Bringing 50 websites onto one platform and providing a consistent user experience Simplifying and standardising publishing Providing user research and a user first approach Reducing cost Increasing security Benefits \u00b6 More consistent UX Improved Admin Interface Improved Security and Improvement process Cheaper, more scalable and performant hosting Cost savings across Govt Better Government (and community) collaboration Better Developer Experience","title":"About"},{"location":"#single-digital-presence","text":"","title":"Single Digital Presence"},{"location":"#overview","text":"SDP project covers implementing a Drupal distribution to build a Content Store site containing site sections and providing content for semi-independent sites. It also covers providing of technical implementation to build fully independent sites. Info Example of Content Store site is https://vic.gov.au , which has site-sections such as Aboriginal Victoria or Family Violence. Semi-independent sites are the other sites that have their content centrally managed. An example of such site is the Office of the Victorian Government Architect site. Fully independent sites are completely separate installations of the whole distribution.","title":"Overview"},{"location":"#project-goals","text":"Making it easier to find, understand and use Victorian Government information Bringing 50 websites onto one platform and providing a consistent user experience Simplifying and standardising publishing Providing user research and a user first approach Reducing cost Increasing security","title":"Project goals"},{"location":"#benefits","text":"More consistent UX Improved Admin Interface Improved Security and Improvement process Cheaper, more scalable and performant hosting Cost savings across Govt Better Government (and community) collaboration Better Developer Experience","title":"Benefits"},{"location":"architecture/","text":"Architecture \u00b6 Single Digital Presence is a distribution that consists of content repository with exposed API (headless Drupal distribution called Tide ) and a front-end components library ( Vue.js with Nuxt server rendering framework called Ripple*). Note The two main requirements that have significant affect on the architecture are: Content sharing across semi-independent sites and content repository Content syndication via API. Content sharing is a common issue amongst larger organisation, however the solutions are highly complex and the publicly available options are not mature enough for immediate use. See Content Sharing section below about content sharing and API. System components \u00b6 There are 2 main components of the system: Tide - Drupal 8 headless distribution that serves as a content repository. Ripple - Vue.js-based library of front-end components. Each instance of Ripple serves as a standalone front-end application for a website. System components inheritance \u00b6 There are 3 layer of components in the Distribution. The features provided by every layer contribute to a final particular website feature set. Each of the layers is owned, supported and maintained by a distinct community: - Open Source - provides Drupal core and contributed modules. It is maintained by a worldwide Drupal community. - Distribution - provides content types, multi-channel and API features. It is maintained by SDP development team. - Specific website - provides unique site features and design components. It is maintained by a particular website development team. See Tide and Ripple for more information about architecture. Content Sharing \u00b6 Content Editors author content and select content sharing targets (semi-independent sites and site sections) for each content piece. Drupal will then serve this content as data through API to each front-end consumer site, implemented as a separate front-end application. Content repository site has only a basic frontend and its IP restricted to a list of allowed IP addresses, so that content editors from designated offices could access the editorial interface. The API endpoints for the content repository site are accessible to the world over the same predefined domain (e.g., https://api.agency.gov.au ). There is no authentication for content consumers. All content editing for all sites is performed through the central content repository instance (e.g. https://content.agency.gov.au ). There are no restrictions for editing content between the various sites, allowing content editors to be used across sites to better utilise limited resources. Content Approvals are still restricted to ensure content is only published upon approval by relevant users. This ensures cross site changes do not go public without proper approval. All content changes are tracked, so users making changes to the wrong site can receive further training to prevent future mistakes.","title":"Architecture"},{"location":"architecture/#architecture","text":"Single Digital Presence is a distribution that consists of content repository with exposed API (headless Drupal distribution called Tide ) and a front-end components library ( Vue.js with Nuxt server rendering framework called Ripple*). Note The two main requirements that have significant affect on the architecture are: Content sharing across semi-independent sites and content repository Content syndication via API. Content sharing is a common issue amongst larger organisation, however the solutions are highly complex and the publicly available options are not mature enough for immediate use. See Content Sharing section below about content sharing and API.","title":"Architecture"},{"location":"architecture/#system-components","text":"There are 2 main components of the system: Tide - Drupal 8 headless distribution that serves as a content repository. Ripple - Vue.js-based library of front-end components. Each instance of Ripple serves as a standalone front-end application for a website.","title":"System components"},{"location":"architecture/#system-components-inheritance","text":"There are 3 layer of components in the Distribution. The features provided by every layer contribute to a final particular website feature set. Each of the layers is owned, supported and maintained by a distinct community: - Open Source - provides Drupal core and contributed modules. It is maintained by a worldwide Drupal community. - Distribution - provides content types, multi-channel and API features. It is maintained by SDP development team. - Specific website - provides unique site features and design components. It is maintained by a particular website development team. See Tide and Ripple for more information about architecture.","title":"System components inheritance"},{"location":"architecture/#content-sharing","text":"Content Editors author content and select content sharing targets (semi-independent sites and site sections) for each content piece. Drupal will then serve this content as data through API to each front-end consumer site, implemented as a separate front-end application. Content repository site has only a basic frontend and its IP restricted to a list of allowed IP addresses, so that content editors from designated offices could access the editorial interface. The API endpoints for the content repository site are accessible to the world over the same predefined domain (e.g., https://api.agency.gov.au ). There is no authentication for content consumers. All content editing for all sites is performed through the central content repository instance (e.g. https://content.agency.gov.au ). There are no restrictions for editing content between the various sites, allowing content editors to be used across sites to better utilise limited resources. Content Approvals are still restricted to ensure content is only published upon approval by relevant users. This ensures cross site changes do not go public without proper approval. All content changes are tracked, so users making changes to the wrong site can receive further training to prevent future mistakes.","title":"Content Sharing"},{"location":"assets/README.module/","text":"name \u00b6 Page content type for Tide distribution for Drupal 8 Tide is a Drupal 8 distribution focused on delivering an API first, headless Drupal content administration site. What is in this package \u00b6 content type fields blocks views JSONAPI module integration Installation \u00b6 To install this package, add this custom repository to repositories section of your composer.json : { \"repositories\" : { \"dpc-sdp/tide_page\" : { \"type\" : \"vcs\" , \"no-api\" : true , \"url\" : \"https://github.com/dpc-sdp/tide_page.git\" } } } Require this package as any other Composer package: composer require dpc/tide_page Support \u00b6 Digital Engagement, Department of Premier and Cabinet, Victoria, Australia is a maintainer of this package. Contribute \u00b6 Open an issue on GitHub or submit a pull request with suggested changes. Development and maintenance \u00b6 Development is powered by Dev-Tools . Please refer to Dev-Tools' page for system requirements and other details. To start local development stack: 1. Checkout this project 2. Run ./dev-tools.sh 3. Run ahoy build Related projects \u00b6 tide tide_api tide_core tide_event tide_landing_page tide_media tide_monsido tide_news tide_page tide_search tide_site tide_test tide_webform License \u00b6 This project is licensed under GPL2","title":"_name_"},{"location":"assets/README.module/#name","text":"Page content type for Tide distribution for Drupal 8 Tide is a Drupal 8 distribution focused on delivering an API first, headless Drupal content administration site.","title":"name"},{"location":"assets/README.module/#what-is-in-this-package","text":"content type fields blocks views JSONAPI module integration","title":"What is in this package"},{"location":"assets/README.module/#installation","text":"To install this package, add this custom repository to repositories section of your composer.json : { \"repositories\" : { \"dpc-sdp/tide_page\" : { \"type\" : \"vcs\" , \"no-api\" : true , \"url\" : \"https://github.com/dpc-sdp/tide_page.git\" } } } Require this package as any other Composer package: composer require dpc/tide_page","title":"Installation"},{"location":"assets/README.module/#support","text":"Digital Engagement, Department of Premier and Cabinet, Victoria, Australia is a maintainer of this package.","title":"Support"},{"location":"assets/README.module/#contribute","text":"Open an issue on GitHub or submit a pull request with suggested changes.","title":"Contribute"},{"location":"assets/README.module/#development-and-maintenance","text":"Development is powered by Dev-Tools . Please refer to Dev-Tools' page for system requirements and other details. To start local development stack: 1. Checkout this project 2. Run ./dev-tools.sh 3. Run ahoy build","title":"Development and maintenance"},{"location":"assets/README.module/#related-projects","text":"tide tide_api tide_core tide_event tide_landing_page tide_media tide_monsido tide_news tide_page tide_search tide_site tide_test tide_webform","title":"Related projects"},{"location":"assets/README.module/#license","text":"This project is licensed under GPL2","title":"License"},{"location":"assets/README.site/","text":"name \u00b6 To be provided.","title":"_name_"},{"location":"assets/README.site/#name","text":"To be provided.","title":"name"},{"location":"bay/","text":"Section placeholder \u00b6 Content for this page has not been migrated yet.","title":"Overview"},{"location":"bay/#section-placeholder","text":"Content for this page has not been migrated yet.","title":"Section placeholder"},{"location":"bay/projects/","text":"Current projects \u00b6 Content for this page has not been migrated yet.","title":"Projects"},{"location":"bay/projects/#current-projects","text":"Content for this page has not been migrated yet.","title":"Current projects"},{"location":"bay/architecture/","text":"Architecture \u00b6 Content for this page has not been migrated yet.","title":"Overview"},{"location":"bay/architecture/#architecture","text":"Content for this page has not been migrated yet.","title":"Architecture"},{"location":"bay/devops-admin-guide/","text":"DevOps admin guide \u00b6 Content for this page has not been migrated yet.","title":"Overview"},{"location":"bay/devops-admin-guide/#devops-admin-guide","text":"Content for this page has not been migrated yet.","title":"DevOps admin guide"},{"location":"bay/performance-testing/","text":"Performance testing \u00b6 Content for this page has not been migrated yet.","title":"Overview"},{"location":"bay/performance-testing/#performance-testing","text":"Content for this page has not been migrated yet.","title":"Performance testing"},{"location":"development/","text":"Development Overview \u00b6 Content for this page has not been migrated yet.","title":"Overview"},{"location":"development/#development-overview","text":"Content for this page has not been migrated yet.","title":"Development Overview"},{"location":"development/accessibility/","text":"Accessibility requirements \u00b6 Content for this page has not been migrated yet.","title":"Accessibility"},{"location":"development/accessibility/#accessibility-requirements","text":"Content for this page has not been migrated yet.","title":"Accessibility requirements"},{"location":"development/automated-builds/","text":"Automated builds \u00b6 Content for this page has not been migrated yet.","title":"Automated builds"},{"location":"development/automated-builds/#automated-builds","text":"Content for this page has not been migrated yet.","title":"Automated builds"},{"location":"development/back-end-coding-standards/","text":"Back-End Coding Standards \u00b6 PHP \u00b6 We use Drupal Coding Standards for all our contributed and custom modules. PHPCodeSniffer runs our code linting using rules from Drupal Coder module and additional customizations. See our the PHPCodeSniffer configuration file . Running locally \u00b6 ahoy lint Setting project coding standards in PHPStorm \u00b6 PHPStorm > Preferences > Code Style Select the appropriate language (in the example image below it is PHP ) Select the Set from... link Select Predefined Style > Drupal It is then possible to use the keyboard shortcut Alt + command + l to format a file or selection. Composer \u00b6 Alphabetise where possible \\ This helps developers scan code Include information to make reviews easier \\ Each patch attribute name should contain the title of the Drupal.org (d.o) issue, the link to the issue comment that contains the patch and the patch attribute value should be the patch file on drupal.org: \"drupal/project\" : { \"Issue title - https://www.drupal.org/node/1234567#12345678\" : \"https://www.drupal.org/files/issues/issue_title-1234567-2.patch\" } , Following this approach makes it simpler to follow up the status of patches during updates. Example of a properly formatted patches attribute: \"patches\" : { \"drupal/better_exposed_filters\" : { \"Add core/drupal as dependency to better_exposed_filters asset libraries - https://www.drupal.org/node/2902742\" : \"https://www.drupal.org/files/issues/add_core_drupal_as-2902742-2.patch\" }, \"drupal/core\" : { \"No validation on text length for menu description when editing node - https://www.drupal.org/node/2852665#comment-12157856\" : \"https://www.drupal.org/files/issues/fatal_error_remove_menu_add_with_tests-2852665-12.patch\" }, } ,","title":"Back-end coding standards"},{"location":"development/back-end-coding-standards/#back-end-coding-standards","text":"","title":"Back-End Coding Standards"},{"location":"development/back-end-coding-standards/#php","text":"We use Drupal Coding Standards for all our contributed and custom modules. PHPCodeSniffer runs our code linting using rules from Drupal Coder module and additional customizations. See our the PHPCodeSniffer configuration file .","title":"PHP"},{"location":"development/back-end-coding-standards/#running-locally","text":"ahoy lint","title":"Running locally"},{"location":"development/back-end-coding-standards/#setting-project-coding-standards-in-phpstorm","text":"PHPStorm > Preferences > Code Style Select the appropriate language (in the example image below it is PHP ) Select the Set from... link Select Predefined Style > Drupal It is then possible to use the keyboard shortcut Alt + command + l to format a file or selection.","title":"Setting project coding standards in PHPStorm"},{"location":"development/back-end-coding-standards/#composer","text":"Alphabetise where possible \\ This helps developers scan code Include information to make reviews easier \\ Each patch attribute name should contain the title of the Drupal.org (d.o) issue, the link to the issue comment that contains the patch and the patch attribute value should be the patch file on drupal.org: \"drupal/project\" : { \"Issue title - https://www.drupal.org/node/1234567#12345678\" : \"https://www.drupal.org/files/issues/issue_title-1234567-2.patch\" } , Following this approach makes it simpler to follow up the status of patches during updates. Example of a properly formatted patches attribute: \"patches\" : { \"drupal/better_exposed_filters\" : { \"Add core/drupal as dependency to better_exposed_filters asset libraries - https://www.drupal.org/node/2902742\" : \"https://www.drupal.org/files/issues/add_core_drupal_as-2902742-2.patch\" }, \"drupal/core\" : { \"No validation on text length for menu description when editing node - https://www.drupal.org/node/2852665#comment-12157856\" : \"https://www.drupal.org/files/issues/fatal_error_remove_menu_add_with_tests-2852665-12.patch\" }, } ,","title":"Composer"},{"location":"development/code-review/","text":"Code review \u00b6 Content for this page has not been migrated yet.","title":"Code review"},{"location":"development/code-review/#code-review","text":"Content for this page has not been migrated yet.","title":"Code review"},{"location":"development/compliance-vpdss/","text":"Compliance with VPDSS \u00b6 Content for this page has not been migrated yet.","title":"Compliance with VPDSS"},{"location":"development/compliance-vpdss/#compliance-with-vpdss","text":"Content for this page has not been migrated yet.","title":"Compliance with VPDSS"},{"location":"development/documentation-responsibility/","text":"Documentation responsibility \u00b6 Content for this page has not been migrated yet.","title":"Documentation responsibility"},{"location":"development/documentation-responsibility/#documentation-responsibility","text":"Content for this page has not been migrated yet.","title":"Documentation responsibility"},{"location":"development/documentation/","text":"Documentation for SDP \u00b6 Deployed to https://dpc-sdp.github.io/sdp-docs/ Requirements \u00b6 Docker Ahoy Quickstart \u00b6 To build locally: ahoy build To serve locally: ahoy deploy Available commands \u00b6 build Build site deploy Deploy site serve Serve site in browser version MkDocs version Automated deployment \u00b6 CircleCI is configured to perform automated deployments for the main branch. The built site is automatically pushed to gh-pages branch. Also note that built site is available in CircleCI build artifacts tab. Important! Do not commit to gh-pages branch manually. Also, try to avoid using ahoy deploy command.","title":"Maintaining this documentation"},{"location":"development/documentation/#documentation-for-sdp","text":"Deployed to https://dpc-sdp.github.io/sdp-docs/","title":"Documentation for SDP"},{"location":"development/documentation/#requirements","text":"Docker Ahoy","title":"Requirements"},{"location":"development/documentation/#quickstart","text":"To build locally: ahoy build To serve locally: ahoy deploy","title":"Quickstart"},{"location":"development/documentation/#available-commands","text":"build Build site deploy Deploy site serve Serve site in browser version MkDocs version","title":"Available commands"},{"location":"development/documentation/#automated-deployment","text":"CircleCI is configured to perform automated deployments for the main branch. The built site is automatically pushed to gh-pages branch. Also note that built site is available in CircleCI build artifacts tab. Important! Do not commit to gh-pages branch manually. Also, try to avoid using ahoy deploy command.","title":"Automated deployment"},{"location":"development/front-end-coding-standards/","text":"Front-End Coding Standards \u00b6 Content for this page has not been migrated yet.","title":"Front-end coding standards"},{"location":"development/front-end-coding-standards/#front-end-coding-standards","text":"Content for this page has not been migrated yet.","title":"Front-End Coding Standards"},{"location":"development/git/","text":"Git \u00b6 Content for this page has not been migrated yet.","title":"Git"},{"location":"development/git/#git","text":"Content for this page has not been migrated yet.","title":"Git"},{"location":"development/local-development-environment/","text":"Local development environment \u00b6 Content for this page has not been migrated yet.","title":"Local development environment"},{"location":"development/local-development-environment/#local-development-environment","text":"Content for this page has not been migrated yet.","title":"Local development environment"},{"location":"development/module-development/","text":"Module development \u00b6 Content for this page has not been migrated yet.","title":"Module Development"},{"location":"development/module-development/#module-development","text":"Content for this page has not been migrated yet.","title":"Module development"},{"location":"development/nist-self-assessment/","text":"NIST self-assessment \u00b6 Content for this page has not been migrated yet.","title":"NIST self-assessment"},{"location":"development/nist-self-assessment/#nist-self-assessment","text":"Content for this page has not been migrated yet.","title":"NIST self-assessment"},{"location":"development/readme-files/","text":"README.md files \u00b6 We provide 2 templates of README.md files: for consumer projects and Tide modules. Projects \u00b6 # _name_ To be provided. Tide modules \u00b6 # _name_ Page content type for [Tide](https://github.com/dpc-sdp/tide) distribution for [Drupal 8](https://github.com/dpc-sdp) Tide is a Drupal 8 distribution focused on delivering an API first, headless Drupal content administration site. [![CircleCI](https://circleci.com/gh/dpc-sdp/_machine_name_.svg?style=shield&circle-token=2a0e49166724ac193636fba5b458024e00342dce)](https://circleci.com/gh/dpc-sdp/_machine_name_) [![Release](https://img.shields.io/github/release/dpc-sdp/_machine_name_.svg)](https://github.com/dpc-sdp/_machine_name_/releases/latest) ![https://www.drupal.org/8](https://img.shields.io/badge/Drupal-8-blue.svg) [![Licence: GPL 2](https://img.shields.io/badge/licence-GPL2-blue.svg)](https://github.com/dpc-sdp/_machine_name_/blob/master/LICENSE.txt) [![Pull Requests](https://img.shields.io/github/issues-pr/dpc-sdp/tide_page.svg)](https://github.com/dpc-sdp/_machine_name_/pulls) ## What is in this package - content type - fields - blocks - views - JSONAPI module integration ## Installation To install this package, add this custom repository to `repositories` section of your `composer.json`: ```json { \"repositories\": { \"dpc-sdp/tide_page\": { \"type\": \"vcs\", \"no-api\": true, \"url\": \"https://github.com/dpc-sdp/tide_page.git\" } } } ``` Require this package as any other Composer package: ```bash composer require dpc/tide_page ``` ## Support [Digital Engagement, Department of Premier and Cabinet, Victoria, Australia](https://github.com/dpc-sdp) is a maintainer of this package. ## Contribute [Open an issue](https://github.com/dpc-sdp) on GitHub or submit a pull request with suggested changes. ## Development and maintenance Development is powered by [Dev-Tools](https://github.com/dpc-sdp/dev-tools). Please refer to Dev-Tools' page for [system requirements](https://github.com/dpc-sdp/dev-tools/#prerequisites) and other details. To start local development stack: 1. Checkout this project 2. Run `./dev-tools.sh` 3. Run `ahoy build` ## Related projects - [tide](https://github.com/dpc-sdp/tide) - [tide_api](https://github.com/dpc-sdp/tide_api) - [tide_core](https://github.com/dpc-sdp/tide_core) - [tide_event](https://github.com/dpc-sdp/tide_event) - [tide_landing_page](https://github.com/dpc-sdp/tide_landing_page) - [tide_media](https://github.com/dpc-sdp/tide_media) - [tide_monsido](https://github.com/dpc-sdp/tide_monsido) - [tide_news](https://github.com/dpc-sdp/tide_news) - [tide_page](https://github.com/dpc-sdp/tide_page) - [tide_search](https://github.com/dpc-sdp/tide_search) - [tide_site](https://github.com/dpc-sdp/tide_site) - [tide_test](https://github.com/dpc-sdp/tide_test) - [tide_webform](https://github.com/dpc-sdp/tide_webform) ## License This project is licensed under [GPL2](https://github.com/dpc-sdp/_machine_name_/blob/master/LICENSE.txt)","title":"README.md files"},{"location":"development/readme-files/#readmemd-files","text":"We provide 2 templates of README.md files: for consumer projects and Tide modules.","title":"README.md files"},{"location":"development/readme-files/#projects","text":"# _name_ To be provided.","title":"Projects"},{"location":"development/readme-files/#tide-modules","text":"# _name_ Page content type for [Tide](https://github.com/dpc-sdp/tide) distribution for [Drupal 8](https://github.com/dpc-sdp) Tide is a Drupal 8 distribution focused on delivering an API first, headless Drupal content administration site. [![CircleCI](https://circleci.com/gh/dpc-sdp/_machine_name_.svg?style=shield&circle-token=2a0e49166724ac193636fba5b458024e00342dce)](https://circleci.com/gh/dpc-sdp/_machine_name_) [![Release](https://img.shields.io/github/release/dpc-sdp/_machine_name_.svg)](https://github.com/dpc-sdp/_machine_name_/releases/latest) ![https://www.drupal.org/8](https://img.shields.io/badge/Drupal-8-blue.svg) [![Licence: GPL 2](https://img.shields.io/badge/licence-GPL2-blue.svg)](https://github.com/dpc-sdp/_machine_name_/blob/master/LICENSE.txt) [![Pull Requests](https://img.shields.io/github/issues-pr/dpc-sdp/tide_page.svg)](https://github.com/dpc-sdp/_machine_name_/pulls) ## What is in this package - content type - fields - blocks - views - JSONAPI module integration ## Installation To install this package, add this custom repository to `repositories` section of your `composer.json`: ```json { \"repositories\": { \"dpc-sdp/tide_page\": { \"type\": \"vcs\", \"no-api\": true, \"url\": \"https://github.com/dpc-sdp/tide_page.git\" } } } ``` Require this package as any other Composer package: ```bash composer require dpc/tide_page ``` ## Support [Digital Engagement, Department of Premier and Cabinet, Victoria, Australia](https://github.com/dpc-sdp) is a maintainer of this package. ## Contribute [Open an issue](https://github.com/dpc-sdp) on GitHub or submit a pull request with suggested changes. ## Development and maintenance Development is powered by [Dev-Tools](https://github.com/dpc-sdp/dev-tools). Please refer to Dev-Tools' page for [system requirements](https://github.com/dpc-sdp/dev-tools/#prerequisites) and other details. To start local development stack: 1. Checkout this project 2. Run `./dev-tools.sh` 3. Run `ahoy build` ## Related projects - [tide](https://github.com/dpc-sdp/tide) - [tide_api](https://github.com/dpc-sdp/tide_api) - [tide_core](https://github.com/dpc-sdp/tide_core) - [tide_event](https://github.com/dpc-sdp/tide_event) - [tide_landing_page](https://github.com/dpc-sdp/tide_landing_page) - [tide_media](https://github.com/dpc-sdp/tide_media) - [tide_monsido](https://github.com/dpc-sdp/tide_monsido) - [tide_news](https://github.com/dpc-sdp/tide_news) - [tide_page](https://github.com/dpc-sdp/tide_page) - [tide_search](https://github.com/dpc-sdp/tide_search) - [tide_site](https://github.com/dpc-sdp/tide_site) - [tide_test](https://github.com/dpc-sdp/tide_test) - [tide_webform](https://github.com/dpc-sdp/tide_webform) ## License This project is licensed under [GPL2](https://github.com/dpc-sdp/_machine_name_/blob/master/LICENSE.txt)","title":"Tide modules"},{"location":"development/release/","text":"Managing releases \u00b6 Content for this page has not been migrated yet.","title":"Release management"},{"location":"development/release/#managing-releases","text":"Content for this page has not been migrated yet.","title":"Managing releases"},{"location":"development/repositories-namespaces/","text":"Repositories and namespaces \u00b6 Content for this page has not been migrated yet.","title":"Repositories and namespaces"},{"location":"development/repositories-namespaces/#repositories-and-namespaces","text":"Content for this page has not been migrated yet.","title":"Repositories and namespaces"},{"location":"development/troubleshooting/","text":"Troubleshooting \u00b6 Content for this page has not been migrated yet.","title":"Troubleshooting"},{"location":"development/troubleshooting/#troubleshooting","text":"Content for this page has not been migrated yet.","title":"Troubleshooting"},{"location":"development/workflow/","text":"Development workflow \u00b6 Content for this page has not been migrated yet.","title":"Development Workflow"},{"location":"development/workflow/#development-workflow","text":"Content for this page has not been migrated yet.","title":"Development workflow"},{"location":"ripple/","text":"Tide profile Bundles collection of Tide and contributed modules into governed, stable and tested Drupal installation profile. Has own automated tests to guarantee that a set of all modules at specified versions is always stable. Tide modules Each module implements well-defined feature. Modules are versioned. This allows for more granular approach when picking modules for specific site needs. Each module has minimal dependency on other modules. Each module has a set of relevant automated tests, making maintenance and implementation of new features easier. The distribution consist of several parts: Tide scaffolding Tide profile Tide modules Tide scaffolding Starter kit for any new projects using Tide. Used by developers to start new projects by running composer create-project dpc-sdp/tide-scaffolding. Generated project has all relevant Tide modules along with Tide profile, as well as test framework and CI configuration. Has own automated tests to guarantee that a new project is always stable. Tide profile Bundles collection of Tide and contributed modules into governed, stable and tested Drupal installation profile. Has own automated tests to guarantee that a set of all modules at specified versions is always stable. Tide modules Each module implements well-defined feature. Modules are versioned. This allows for more granular approach when picking modules for specific site needs. Each module has minimal dependency on other modules. Each module has a set of relevant automated tests, making maintenance and implementation of new features easier. Ripple Architecture Powered by Vue.js, which is isomorphic front-end framework running on Nuxt, that allows the code to be rendered as HTML on the server and delivered to the user. This provides a faster render for the page for the user and also maximises SEO for the site. Uses a componentised structure, which maximises reusability across the new sites. Any agency seeking to build a new site will have the option to use any or all of the components in the frontend framework, which will greatly speed up their site development and lower overall cost of the project. Components published to NPM separately, allowing to use only required components. Components have documented usage example in the format suitable for automated generation of the Style Guide. Has starter kit, which lowers entry barrier when starting to use Ripple.","title":"Overview"},{"location":"ripple/api/","text":"Ripple API \u00b6 Content for this page has not been migrated yet.","title":"API"},{"location":"ripple/api/#ripple-api","text":"Content for this page has not been migrated yet.","title":"Ripple API"},{"location":"ripple/components/","text":"Components \u00b6 Content for this page has not been migrated yet.","title":"Components"},{"location":"ripple/components/#components","text":"Content for this page has not been migrated yet.","title":"Components"},{"location":"ripple/content-rendering-pipeline/","text":"Content delivery and rendering pipeline \u00b6 Content for this page has not been migrated yet.","title":"Content rendering pipeline"},{"location":"ripple/content-rendering-pipeline/#content-delivery-and-rendering-pipeline","text":"Content for this page has not been migrated yet.","title":"Content delivery and rendering pipeline"},{"location":"ripple/search/","text":"Search \u00b6 Content for this page has not been migrated yet.","title":"Search"},{"location":"ripple/search/#search","text":"Content for this page has not been migrated yet.","title":"Search"},{"location":"ripple/setup/","text":"Setting up a new Ripple site \u00b6 Content for this page has not been migrated yet.","title":"Setup new site"},{"location":"ripple/setup/#setting-up-a-new-ripple-site","text":"Content for this page has not been migrated yet.","title":"Setting up a new Ripple site"},{"location":"tide/","text":"Tide \u00b6 Tide Drupal 8 distribution consists of a profile and several modules. The profile is a mere collection of Tide modules bundled into governed, stable and tested Drupal installation profile. All modules and a profile have automated tests to guarantee that a set of all modules at specified versions is always stable.","title":"Overview"},{"location":"tide/#tide","text":"Tide Drupal 8 distribution consists of a profile and several modules. The profile is a mere collection of Tide modules bundled into governed, stable and tested Drupal installation profile. All modules and a profile have automated tests to guarantee that a set of all modules at specified versions is always stable.","title":"Tide"},{"location":"tide/api/","text":"Tide API \u00b6 Content for this page has not been migrated yet.","title":"API"},{"location":"tide/api/#tide-api","text":"Content for this page has not been migrated yet.","title":"Tide API"},{"location":"tide/fields-components/","text":"Fields and components \u00b6 Content for this page has not been migrated yet.","title":"Fields and components"},{"location":"tide/fields-components/#fields-and-components","text":"Content for this page has not been migrated yet.","title":"Fields and components"},{"location":"tide/modules/","text":"Modules \u00b6 The standalone modules are split based on the features or functionality they provide. Modules can be installed as a part of the profile as well as a standalone (provided that other dependency modules installed as well). Every module implements a well-defined feature set. Modules are versioned. This allows for more granular approach when picking modules for particular site needs. Every module has a minimal dependency on other modules. Every module has a set of relevant automated tests. List of modules \u00b6 Name Machine name Category Repository Description Tide API tide_api Utility https://github.com/dpc-sdp/tide_api Exposes content entities to API endpoints. it is required for sites running headless. Tide Core tide_core Utility https://github.com/dpc-sdp/tide_core Configurations and settings for Tide distribution. Dependency module for any other Tide module. Tide Event tide_event Content type https://github.com/dpc-sdp/tide_event Event content type and fields. Tide Landing Page tide_landing_page Content type https://github.com/dpc-sdp/tide_landing_page \"Landing page content type with fields. Based on paragrpahs, it allows to create pages with complex layouts.\" Tide Media tide_media Utility https://github.com/dpc-sdp/tide_media Media types and configurations. Tide Monsido tide_monsido 3 rd party integration https://github.com/dpc-sdp/tide_monsido Integration with Monsido platform. Tide News tide_news Content type https://github.com/dpc-sdp/tide_news Event content type and fields. Tide Page tide_page Content type https://github.com/dpc-sdp/tide_page Page content type and fields. Tide Search tide_search Utility https://github.com/dpc-sdp/tide_search Search configurations and settings. Tide Site tide_site Utility https://github.com/dpc-sdp/tide_site Multi-site and multi-section content sharing. Tide Test tide_test Utility https://github.com/dpc-sdp/tide_test Test content type and helpers used to test other modules. Tide Webform tide_webform Utility https://github.com/dpc-sdp/tide_webform Forms supports such as Content Rating form. Automated testing \u00b6 Tide modules use PHPUnit and Behat for unit and integration/behavioural testing. The tests are running inside of the Continuous Integration pipeline provided by CircleCI . For every change pushed to the repository, CircleCI starts the build, where tests are running in 2 modes: normal and suggested . In normal mode the module is installed with it's required dependencies into freshly built Drupal site. Once installed, the tests will run and check that the configuration shipped with the module indeed works. In suggested mode, the module is installed with it's requires and optional dependencies. Once installed, the tests will run and check that the configuration shipped with the module indeed works and that it does not conflict with other optional modules. This \"double-testing\" is very powerful tool to keep configuration in releasable state. Versions \u00b6 Modules versions follow semantic versioning : Quote Given a version number MAJOR.MINOR.PATCH , increment the: MAJOR version when you make incompatible API changes, MINOR version when you add functionality in a backwards-compatible manner, and PATCH version when you make backwards-compatible bug fixes. Additional labels for pre-release and build metadata are available as extensions to the MAJOR.MINOR.PATCH format. With some Tide functionality heavily relying on specific Drupal core version, when features added and changed in MINOR Drupal core versions (like moving Media into Drupal core), Tide modules increment their MAJOR version when Drupal core or dependent contributed modules change their API. Since Tide modules functionality is built on top of Drupal core and contributed modules, it has to \"tighten\" versioning rules. Every Tide module has to increment the: - MAJOR version when Drupal core or contrib module has an API change. An example of this is moving Media into Drupal core in version 8.5 . - MINOR version when Tide module functionality is enhanced or when other dependent Tide module has it's API change (that would trigger own release). - PATCH version when there is a backwards-compatible bug fixes (no change from SemVer). SDP development team is committed to support development, maintain all Tide modules and follow versioning rules.","title":"Modules"},{"location":"tide/modules/#modules","text":"The standalone modules are split based on the features or functionality they provide. Modules can be installed as a part of the profile as well as a standalone (provided that other dependency modules installed as well). Every module implements a well-defined feature set. Modules are versioned. This allows for more granular approach when picking modules for particular site needs. Every module has a minimal dependency on other modules. Every module has a set of relevant automated tests.","title":"Modules"},{"location":"tide/modules/#list-of-modules","text":"Name Machine name Category Repository Description Tide API tide_api Utility https://github.com/dpc-sdp/tide_api Exposes content entities to API endpoints. it is required for sites running headless. Tide Core tide_core Utility https://github.com/dpc-sdp/tide_core Configurations and settings for Tide distribution. Dependency module for any other Tide module. Tide Event tide_event Content type https://github.com/dpc-sdp/tide_event Event content type and fields. Tide Landing Page tide_landing_page Content type https://github.com/dpc-sdp/tide_landing_page \"Landing page content type with fields. Based on paragrpahs, it allows to create pages with complex layouts.\" Tide Media tide_media Utility https://github.com/dpc-sdp/tide_media Media types and configurations. Tide Monsido tide_monsido 3 rd party integration https://github.com/dpc-sdp/tide_monsido Integration with Monsido platform. Tide News tide_news Content type https://github.com/dpc-sdp/tide_news Event content type and fields. Tide Page tide_page Content type https://github.com/dpc-sdp/tide_page Page content type and fields. Tide Search tide_search Utility https://github.com/dpc-sdp/tide_search Search configurations and settings. Tide Site tide_site Utility https://github.com/dpc-sdp/tide_site Multi-site and multi-section content sharing. Tide Test tide_test Utility https://github.com/dpc-sdp/tide_test Test content type and helpers used to test other modules. Tide Webform tide_webform Utility https://github.com/dpc-sdp/tide_webform Forms supports such as Content Rating form.","title":"List of modules"},{"location":"tide/modules/#automated-testing","text":"Tide modules use PHPUnit and Behat for unit and integration/behavioural testing. The tests are running inside of the Continuous Integration pipeline provided by CircleCI . For every change pushed to the repository, CircleCI starts the build, where tests are running in 2 modes: normal and suggested . In normal mode the module is installed with it's required dependencies into freshly built Drupal site. Once installed, the tests will run and check that the configuration shipped with the module indeed works. In suggested mode, the module is installed with it's requires and optional dependencies. Once installed, the tests will run and check that the configuration shipped with the module indeed works and that it does not conflict with other optional modules. This \"double-testing\" is very powerful tool to keep configuration in releasable state.","title":"Automated testing"},{"location":"tide/modules/#versions","text":"Modules versions follow semantic versioning : Quote Given a version number MAJOR.MINOR.PATCH , increment the: MAJOR version when you make incompatible API changes, MINOR version when you add functionality in a backwards-compatible manner, and PATCH version when you make backwards-compatible bug fixes. Additional labels for pre-release and build metadata are available as extensions to the MAJOR.MINOR.PATCH format. With some Tide functionality heavily relying on specific Drupal core version, when features added and changed in MINOR Drupal core versions (like moving Media into Drupal core), Tide modules increment their MAJOR version when Drupal core or dependent contributed modules change their API. Since Tide modules functionality is built on top of Drupal core and contributed modules, it has to \"tighten\" versioning rules. Every Tide module has to increment the: - MAJOR version when Drupal core or contrib module has an API change. An example of this is moving Media into Drupal core in version 8.5 . - MINOR version when Tide module functionality is enhanced or when other dependent Tide module has it's API change (that would trigger own release). - PATCH version when there is a backwards-compatible bug fixes (no change from SemVer). SDP development team is committed to support development, maintain all Tide modules and follow versioning rules.","title":"Versions"},{"location":"tide/setup/","text":"Setting up a new Tide site \u00b6 Content for this page has not been migrated yet.","title":"Setup new site"},{"location":"tide/setup/#setting-up-a-new-tide-site","text":"Content for this page has not been migrated yet.","title":"Setting up a new Tide site"},{"location":"tide/sites-sections/","text":"Sites and sections \u00b6 Content for this page has not been migrated yet.","title":"Sites and sections"},{"location":"tide/sites-sections/#sites-and-sections","text":"Content for this page has not been migrated yet.","title":"Sites and sections"}]}