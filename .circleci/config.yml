version: 2
aliases:

  - &deploy_ssh_fingerprint "36:03:e3:ca:b3:0b:82:18:e2:e9:ae:5d:81:17:86:b1"

jobs:
  build:
    working_directory: /app
    docker:
      - image: integratedexperts/ci-builder
    steps:
      - checkout
      - setup_remote_docker
      - run: sed -i -e "/###/d" docker-compose.yml
      - run: ahoy build
      - run: ahoy test

  deploy:
    working_directory: /app
    environment:
      DEPLOY_SSH_FINGERPRINT: *deploy_ssh_fingerprint
    docker:
      - image: squidfunk/mkdocs-material
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - *deploy_ssh_fingerprint
      - run: |
          # Configure SSH to configure git and SSH to connect to remote servers for deployment.
          [ "$(git config --global user.name)" == "" ]  && git config --global user.name "${DEPLOY_USER_NAME}"
          [ "$(git config --global user.email)" == "" ] && git config --global user.email "${DEPLOY_USER_EMAIL}"
          mkdir -p "${HOME}/.ssh/"
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > "${HOME}/.ssh/config"
          DEPLOY_SSH_FILE="${DEPLOY_SSH_FINGERPRINT//:}"
          DEPLOY_SSH_FILE="${HOME}/.ssh/id_rsa_${DEPLOY_SSH_FILE//\"}"
          if [ -f "${DEPLOY_SSH_FILE}" ]; then
            echo "Found Deploy SSH key file ${DEPLOY_SSH_FILE}"
            ssh-add -D > /dev/null
            ssh-add "${DEPLOY_SSH_FILE}"
          fi
      - run: pip install mdx_include
      - run: mkdocs gh-deploy --message "[skip ci] Updated documentation."

workflows:
  version: 2
  main:
    jobs:
      - build:
          filters:
            branches:
              ignore: gh-pages
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
